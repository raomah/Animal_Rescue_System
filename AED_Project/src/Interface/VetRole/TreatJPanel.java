/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.VetRole;

import Business.Animals.CatDetails;
import Business.Animals.DogDetails;
import Business.Cages.CageDetail;
import Business.Enterprises.EnterpriseDetails;
import Business.Enterprises.RescueCenterEntDetails;
import Business.Organisation.VeterinarianOrganisation;
import Business.RescueRecord.RescueRecordDetails;
import Business.Treatment.TreatmentRecordDetails;
import Business.UserAccount.UserAccountDetails;
import Business.WorkQueue.PharmacyWre;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class TreatJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TreatJPanel
     */
    
    private JPanel container;
    private RescueCenterEntDetails enterprise;
    //private VeterinarianOrganisation organization;
    private UserAccountDetails userAccount;
    private RescueRecordDetails rescueRecord;
    private TreatmentRecordDetails treatment;
    
    public TreatJPanel(JPanel container, EnterpriseDetails enterprise, UserAccountDetails userAccount, RescueRecordDetails record, TreatmentRecordDetails treatment) {
        initComponents();
        this.container = container;
        this.enterprise = (RescueCenterEntDetails)enterprise;
        //this.organization = organization;
        this.userAccount = userAccount;
        this.rescueRecord = record;
        this.treatment = treatment;
       
        
        rbtnYes.setSelected(true);
        rbtnHealthy.setSelected(true);
        rbtnNone.setSelected(false);
        populateAnimal();
    }

    public void populateAnimal(){
        DefaultTableModel model = (DefaultTableModel)tblAnimal.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        row[0] = rescueRecord.getRescuedanimal().getAnimalid();
        row[1] = rescueRecord.getRescuedanimal().getAnimaltype();
        row[2] = rescueRecord.getRescuedanimal().getAnimalcolor();
        model.addRow(row);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnimal = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        btnRequest = new javax.swing.JButton();
        btnFinish = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rbtnYes = new javax.swing.JRadioButton();
        rbtnNo = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtBreed = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rbtnHealthy = new javax.swing.JRadioButton();
        rbtnNotHealthy = new javax.swing.JRadioButton();
        rbtnNone = new javax.swing.JRadioButton();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Treat An Animal");

        tblAnimal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Animal ID", "Animal Type", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAnimal);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("Age:");

        btnRequest.setText("Send Request To Pharmacy");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Sterilized Or Not:");

        rbtnYes.setText("Yes");
        rbtnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnYesActionPerformed(evt);
            }
        });

        rbtnNo.setText("No");
        rbtnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setText("Breed:");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel6.setText("Is Healthy:");

        rbtnHealthy.setText("Yes");
        rbtnHealthy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHealthyActionPerformed(evt);
            }
        });

        rbtnNotHealthy.setText("No");
        rbtnNotHealthy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNotHealthyActionPerformed(evt);
            }
        });

        rbtnNone.setText("None");
        rbtnNone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)))
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRequest)
                        .addGap(325, 325, 325))))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbtnYes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtnNo))
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBreed, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbtnHealthy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtnNotHealthy)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnNone)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBreed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnNone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rbtnHealthy)
                    .addComponent(rbtnNotHealthy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbtnYes)
                    .addComponent(rbtnNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        VeterinarianWorkAreaJPanel vwajp = (VeterinarianWorkAreaJPanel) component;
        vwajp.populateTable();
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void rbtnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnYesActionPerformed
        // TODO add your handling code here:
        rbtnNo.setSelected(false);
    }//GEN-LAST:event_rbtnYesActionPerformed

    private void rbtnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNoActionPerformed
        // TODO add your handling code here:
        rbtnYes.setSelected(false);
    }//GEN-LAST:event_rbtnNoActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        // TODO add your handling code here:
        if( !txtAge.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(null,"Age is invalid.");
            return;
        }
        if (rbtnNone.isSelected() == false && txtBreed.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Breed is required.");
            return;
        }
        int age = Integer.parseInt(txtAge.getText());
        boolean sterilized;
        boolean isFull = true;
        
        rescueRecord.getRescuedanimal().setAnimalage(age);
        if(rescueRecord.getRescuedanimal() instanceof CatDetails) {
            if(rbtnNone.isSelected() == true) {
                ((CatDetails)rescueRecord.getRescuedanimal()).setCatbreed("None");
            }
            else {
                ((CatDetails)rescueRecord.getRescuedanimal()).setCatbreed(txtBreed.getText());
            }
        }
        if(rescueRecord.getRescuedanimal() instanceof DogDetails) {
            if(rbtnNone.isSelected() == true) {
                ((DogDetails)rescueRecord.getRescuedanimal()).setDogbreed("None");
            }
            else {
                ((DogDetails)rescueRecord.getRescuedanimal()).setDogbreed(txtBreed.getText());
            }
        }
        
        if(rbtnHealthy.isSelected() == true) {
            rescueRecord.setHealth(true);
        }
        else {
            rescueRecord.setHealth(false);
        }
        
        if(rbtnYes.isSelected() == true) {
            sterilized = true;
        }
        else {
            sterilized = false;
        }
        rescueRecord.getRescuedanimal().setIsSterilize(sterilized);
        System.out.println("-----------------------------------");
        System.out.println(enterprise.getCageCellDirectory().getCageCellList().size());
        for(CageDetail c: enterprise.getCageCellDirectory().getCageCellList()) {
            System.out.println(c.getCagestatus());
        }
        for(CageDetail c: enterprise.getCageCellDirectory().getCageCellList()) {
            if(c.getCagestatus().equals(CageDetail.AVAIL_STATUS)) {
                c.setAnimal(rescueRecord.getRescuedanimal());
                c.setCagestatus(CageDetail.OCCUPIED_STATUS);
                isFull = false;
                break;
            }
        }
        if(isFull == true) {
            
        }
        btnRequest.setEnabled(false);
        btnFinish.setEnabled(false);
        JOptionPane.showMessageDialog(null,"Treatment has been recorded.");
    }//GEN-LAST:event_btnFinishActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        container.add("RequestMedicineJPanel", new RequestMedicineJPanel(container, enterprise, userAccount, treatment,rescueRecord));
        layout.next(container);
    }//GEN-LAST:event_btnRequestActionPerformed

    private void rbtnHealthyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHealthyActionPerformed
        // TODO add your handling code here:
        rbtnNotHealthy.setSelected(false);
    }//GEN-LAST:event_rbtnHealthyActionPerformed

    private void rbtnNotHealthyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNotHealthyActionPerformed
        // TODO add your handling code here:
        rbtnHealthy.setSelected(false);
    }//GEN-LAST:event_rbtnNotHealthyActionPerformed

    private void rbtnNoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNoneActionPerformed
        // TODO add your handling code here:
        if(rbtnNone.isSelected() == true) {
            txtBreed.setEnabled(false);
        }
        else if(rbtnNone.isSelected() == false) {
            txtBreed.setEnabled(true);
        }
    }//GEN-LAST:event_rbtnNoneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtnHealthy;
    private javax.swing.JRadioButton rbtnNo;
    private javax.swing.JRadioButton rbtnNone;
    private javax.swing.JRadioButton rbtnNotHealthy;
    private javax.swing.JRadioButton rbtnYes;
    private javax.swing.JTable tblAnimal;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBreed;
    // End of variables declaration//GEN-END:variables
}
