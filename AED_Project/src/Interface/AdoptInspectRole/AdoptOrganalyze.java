/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdoptInspectRole;

import Business.Adopt.AdopterDetail;
import Business.Adopt.AdoptRecord;
import Business.Animals.AnimalDetails;
import Business.Animals.CatDetails;
import Business.Animals.DogDetails;
import Business.Enterprises.EnterpriseDetails;
import Business.Enterprises.RescueCenterEntDetails;
import Business.Network.NetworkDetails;
import Business.Organisation.AdoptionOrganisation;
import Business.Organisation.OrganisationMain;
import Business.UserAccount.UserAccountDetails;
import Business.UserAccount.VisitorAccountDetails;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class AdoptOrganalyze extends javax.swing.JPanel {

    /**
     * Creates new form AdoptOrganalyze
     */
    
    private JPanel container;
    private RescueCenterEntDetails enterprise;
    private AdoptionOrganisation organization;
    private UserAccountDetails userAccount;
    
    public AdoptOrganalyze(JPanel container, RescueCenterEntDetails enterprise, AdoptionOrganisation organization, UserAccountDetails userAccount) {
        initComponents();
        this.container = container;
        this.enterprise = (RescueCenterEntDetails)enterprise;
        this.organization = organization;
        this.userAccount = userAccount;
        
        populateValues();
        populateTypeTable();
    }
    
    public void populateValues() {
        lblAdoptions.setText(String.valueOf(getTotalAdoptions()));
        lblAdopters.setText(String.valueOf(getAdoptersCount()));
        lblPercentage.setText(String.valueOf((getAdoptedCount() / getTotalValue()) * 100) + "%");
    }
    
    public void populateTypeTable() {
        DefaultTableModel model = (DefaultTableModel) tblTypes.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        row[0] = "Dogs";
        row[1] = (getDogCount() / getTotalAdoptions()) * 100 + "%";
        model.addRow(row);
        
        row[0] = "Male";
        row[1] = (getMaleCount() / getTotalAdoptions()) * 100 + "%";
        model.addRow(row);
        
        row[0] = "Has Breed";
        row[1] = (getBreedCount() / getTotalAdoptions()) * 100 + "%";
        model.addRow(row);
    }
    
    public int getTotalAdoptions() {
        int count = 0;
        for(AdoptRecord ar: organization.getAdoptionRecordDirectory().getAdoptionRecordList()) {
            count++;
        }
        return count;
    }
    
    public int getAdoptersCount() {
        int count = 0;
        for(AdopterDetail a: organization.getAdopterDirectory().getAdoptorList()) {
            count++;
        }
        return count;
    }
    
    public float getAdoptedCount() {
        float count = 0;
        for(AnimalDetails a: enterprise.getAnimalDirectory().getAnimalList()) {
            if(a.getAnimalstatus().equals(AnimalDetails.ADOPTED_STATUS)) {
                count++;
            }
        }
        return count;
    }
    
    public int getTotalValue() {
        int sum = 0;
        sum += enterprise.getRecordDirectory().getRescueRecordList().size();
           
        return sum;
    }
    
    
    public float getDogCount() {
        float count = 0;
        for(AdoptRecord ar: organization.getAdoptionRecordDirectory().getAdoptionRecordList()) {
            if(ar.getAnimal().getAnimaltype().equals(AnimalDetails.AnimalType.Dog)) {
                count++;
            }
        } 
        return count;
    }
    
    public float getMaleCount() {
        float count = 0;
        for(AdoptRecord ar: organization.getAdoptionRecordDirectory().getAdoptionRecordList()) {
            if(ar.getAnimal().getAnimalgender() != null) {
                System.out.println(ar.getAnimal().getAnimalgender());
                if(ar.getAnimal().getAnimalgender().equals("M")) {
                    count++;
                }
            }
        }
        return count;
    }
    
    public float getBreedCount() {
        float count = 0;
        for(AdoptRecord ar: organization.getAdoptionRecordDirectory().getAdoptionRecordList()) {
            AnimalDetails a = ar.getAnimal();
            if(a.getAnimaltype().equals(AnimalDetails.AnimalType.Dog)) {
                if(!((DogDetails)a).getDogbreed().equals("None")) {
                    count++;
                }
            }
            else if(a.getAnimaltype().equals(AnimalDetails.AnimalType.Cat)) {
                if(!((CatDetails)a).getCatbreed().equals("None")) {
                    count++;
                }
            }
        }
                        
        return count;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAdoption = new javax.swing.JLabel();
        lblAdoptionApplied = new javax.swing.JLabel();
        lblQty = new javax.swing.JLabel();
        lblPercentageadoption = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTypes = new javax.swing.JTable();
        lblAnimal = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblPercentage = new javax.swing.JLabel();
        lblAdopters = new javax.swing.JLabel();
        lblAdoptions = new javax.swing.JLabel();
        backbutton = new javax.swing.JButton();

        lblAdoption.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblAdoption.setText("Analysis Adoptions :");

        lblAdoptionApplied.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblAdoptionApplied.setText("Total Number Adoptions Applications:");

        lblQty.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblQty.setText("Number of Total Adopters:");

        lblPercentageadoption.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblPercentageadoption.setText("Percentage of Animal Adopted:");

        tblTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Percentage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTypes);

        lblAnimal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAnimal.setText("Animal");

        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblStatus.setText("Status");

        lblPercentage.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblPercentage.setText("<Value>");

        lblAdopters.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblAdopters.setText("<Value>");

        lblAdoptions.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        lblAdoptions.setText("<Value>");

        backbutton.setText("Previous");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAnimal)
                            .addComponent(lblStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblQty)
                            .addComponent(lblAdoptionApplied)
                            .addComponent(lblPercentageadoption))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdopters)
                            .addComponent(lblAdoptions)
                            .addComponent(lblPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblAdoption)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(lblAdoption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdoptionApplied)
                    .addComponent(lblAdoptions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQty)
                    .addComponent(lblAdopters))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPercentage)
                    .addComponent(lblPercentageadoption, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAnimal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backbuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAdopters;
    private javax.swing.JLabel lblAdoption;
    private javax.swing.JLabel lblAdoptionApplied;
    private javax.swing.JLabel lblAdoptions;
    private javax.swing.JLabel lblAnimal;
    private javax.swing.JLabel lblPercentage;
    private javax.swing.JLabel lblPercentageadoption;
    private javax.swing.JLabel lblQty;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tblTypes;
    // End of variables declaration//GEN-END:variables
}
