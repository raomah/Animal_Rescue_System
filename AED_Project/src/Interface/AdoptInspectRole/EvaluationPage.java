/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdoptInspectRole;

import Business.Adopt.AdoptHistory;
import Business.Adopt.AdoptionOffered;
import Business.Adopt.AdoptRecord;
import Business.Animals.AnimalDetails;
import Business.Date.Date;
import Business.Deliver.DeliveryHistoryDetails;
import Business.Enterprises.RescueCenterEntDetails;
import Interface.AdoptorRole.MyAdoptPage;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author user
 */
public class EvaluationPage extends javax.swing.JPanel {

    /**
     * Creates new form EvaluationPage
     */
    
    private JPanel container;
    private RescueCenterEntDetails enterprise;
    private AdoptRecord ar;
    
    EvaluationPage(JPanel container, RescueCenterEntDetails enterprise, AdoptRecord ar) {
        initComponents();
        this.container = container;
        this.enterprise = enterprise;
        this.ar = ar;
        rbtnApprove.setSelected(true);
        txtMessage.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrevious = new javax.swing.JButton();
        lblEvaluateApp = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblResult = new javax.swing.JLabel();
        rbtnApprove = new javax.swing.JRadioButton();
        rbtnReject = new javax.swing.JRadioButton();
        lblDeliveryDate = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        lblYear = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        lblReason = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnPrevious.setForeground(new java.awt.Color(255, 0, 51));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblEvaluateApp.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblEvaluateApp.setForeground(new java.awt.Color(255, 51, 51));
        lblEvaluateApp.setText("APPLICANT EVALUATION");

        btnSubmit.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 51, 0));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblResult.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblResult.setText("Result:");

        rbtnApprove.setBackground(new java.awt.Color(255, 255, 255));
        rbtnApprove.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbtnApprove.setText("Approve");
        rbtnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnApproveActionPerformed(evt);
            }
        });

        rbtnReject.setBackground(new java.awt.Color(255, 255, 255));
        rbtnReject.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbtnReject.setText("Reject");
        rbtnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnRejectActionPerformed(evt);
            }
        });

        lblDeliveryDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDeliveryDate.setText("Delivery Date:");

        lblMonth.setBackground(new java.awt.Color(255, 255, 255));
        lblMonth.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblMonth.setText("MM");

        lblDate.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblDate.setText("DD");

        txtYear.setSelectionColor(new java.awt.Color(255, 204, 204));

        txtMonth.setSelectionColor(new java.awt.Color(255, 204, 204));

        txtDate.setSelectionColor(new java.awt.Color(255, 204, 204));

        lblYear.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        lblYear.setText("YYYY");

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        txtMessage.setEnabled(false);
        txtMessage.setSelectionColor(new java.awt.Color(255, 204, 204));
        jScrollPane1.setViewportView(txtMessage);

        lblReason.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblReason.setText("Reason:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblReason)
                    .addComponent(lblDeliveryDate)
                    .addComponent(lblResult))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(rbtnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbtnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(lblYear))
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(4, 4, 4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(lblMonth)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDate)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblResult)
                    .addComponent(rbtnApprove)
                    .addComponent(rbtnReject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeliveryDate)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(lblMonth)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReason)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrevious)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSubmit)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEvaluateApp)
                .addGap(150, 150, 150))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEvaluateApp)
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CheckInspectInfo sidjp = (CheckInspectInfo) component;
        sidjp.populateButton();
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(rbtnApprove.isSelected() == true) {
            if(!txtYear.getText().matches("\\d{4}")) {
                JOptionPane.showMessageDialog(null, "Year is invalid");
                return;
            }
            if(txtYear.getText().matches("\\d{4}")) {
                if(Integer.parseInt(txtYear.getText()) < 2016) {
                    JOptionPane.showMessageDialog(null, "Year is invalid");
                    return;
                }
            }
            if(!txtMonth.getText().matches("\\d{1,2}")){
                JOptionPane.showMessageDialog(null, "Month is invalid");
                return;
            }
            if(txtMonth.getText().matches("\\d{1,2}")) {
                if(Integer.parseInt(txtMonth.getText()) > 12 
                        || Integer.parseInt(txtMonth.getText()) <= 0 ) {
                    JOptionPane.showMessageDialog(null, "Month is invalid");
                    return;
                }
                else if(Integer.parseInt(txtYear.getText()) == 2016
                         && Integer.parseInt(txtMonth.getText()) < 12) {
                    JOptionPane.showMessageDialog(null, "Month is invalid");
                    return;
                }
            }
            if(!txtDate.getText().matches("\\d{1,2}")){
                JOptionPane.showMessageDialog(null, "Date is invalid");
                return;
            }
            if(txtDate.getText().matches("\\d{1,2}")) {
                if(Integer.parseInt(txtDate.getText()) > 31
                        || Integer.parseInt(txtDate.getText()) <= 0 ) {
                    JOptionPane.showMessageDialog(null, "Date is invalid");
                    return;
                }
                else if(Integer.parseInt(txtYear.getText()) == 2016
                         && Integer.parseInt(txtMonth.getText()) == 12
                        && Integer.parseInt(txtDate.getText()) < 16) {
                    JOptionPane.showMessageDialog(null, "Date is invalid");
                    return;
                }
            }
        }
        
        if(rbtnReject.isSelected() == true) {
            if(txtMessage.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please fill out the reason for rejection.");
                return;
            }
        }
        
        if(rbtnApprove.isSelected() == true) {
            ar.setStatus(AdoptRecord.APPROVED_STATUS);
            int size = ar.getAdoptorName().getHistoryDirectory().getHistoryList().size();
            ar.getAdoptorName().getHistoryDirectory().getHistoryList().get(size-1).setStatus(AdoptHistory.APPROVED_STATUS);
            ar.getAnimal().setAnimalstatus(AnimalDetails.ADOPTED_STATUS);
            DeliveryHistoryDetails dh = new DeliveryHistoryDetails();
            dh.setAdoptername(ar.getAdoptorName());
            dh.setAnimal(ar.getAnimal());
            dh.setStatus(DeliveryHistoryDetails.WAITING_STATUS);

            int year = Integer.parseInt(txtYear.getText());
            int month = Integer.parseInt(txtMonth.getText());
            int date = Integer.parseInt(txtDate.getText());
            Date d = new Date();
            d.setYear(year);
            d.setMonth(month);
            d.setDate(date);
            dh.setDate(d);
            enterprise.getDeliveryHistoryDirectory().addDeliveryHistory(dh);
        }
        else if(rbtnReject.isSelected() == true) {
            ar.setStatus(AdoptRecord.REJECTED_STATUS);
            int size = ar.getAdoptorName().getHistoryDirectory().getHistoryList().size();
            ar.getAdoptorName().getHistoryDirectory().getHistoryList().get(size-1).setMessage(txtMessage.getText());
            ar.getAdoptorName().getHistoryDirectory().getHistoryList().get(size-1).setStatus(AdoptHistory.REJECTED_STATUS);
            for(AdoptionOffered ao: enterprise.getAdoptionList().getAdoptionOfferingList()) {
                if(ao.getAnimal() == ar.getAnimal()) {
                    ao.setStatus(AdoptionOffered.OPEN_STATUS);
                }
            }
        }
        
        btnSubmit.setVisible(false);
        JOptionPane.showMessageDialog(null, "Evaluated Successfully.\nResult has been sent.");
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void rbtnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnApproveActionPerformed
        // TODO add your handling code here:
        rbtnReject.setSelected(false);
        txtMessage.setEnabled(false);
        txtYear.setEnabled(true);
        txtMonth.setEnabled(true);
        txtDate.setEnabled(true);
    }//GEN-LAST:event_rbtnApproveActionPerformed

    private void rbtnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnRejectActionPerformed
        // TODO add your handling code here:
        rbtnApprove.setSelected(false);
        txtMessage.setEnabled(true);
        txtYear.setEnabled(false);
        txtMonth.setEnabled(false);
        txtDate.setEnabled(false);
    }//GEN-LAST:event_rbtnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDeliveryDate;
    private javax.swing.JLabel lblEvaluateApp;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblReason;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblYear;
    private javax.swing.JRadioButton rbtnApprove;
    private javax.swing.JRadioButton rbtnReject;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
